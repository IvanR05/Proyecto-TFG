---
import { School, Edit, Trash2 } from 'lucide-astro';
const { id, grupo } = Astro.props;
---

<div class="card-container">
    <!-- Izquierda: Icono -->
    <div class="icon-container">
        <School size={30} />
    </div>

    <!-- Derecha: Contenido (expande el espacio disponible) -->
    <div class="content-container">
        <!-- Fila 1: ID a la izquierda, Grupo a la derecha -->
        <div class="info-row">
            <span class="id"><b>{id}</b></span>
            <span class="grupo">{grupo}</span>
        </div>

        <!-- Fila 2: Botones alineados a la derecha -->
        <div class="buttons-row">
            <a href={`/EditorAula?id=${id}&grupo=${grupo}&editando=true`} class="icon-button edit">
                <Edit size={14} />
            </a>
            <a href="#" class="icon-button delete" onclick={`setTimeout(() => eliminarAula('${id}'), 0); return false;`}>
                <Trash2 size={14} />
            </a>
        </div>
    </div>
</div>

<script is:inline>
    async function eliminarAula(id_aula) {
        if (!confirm(`Â¿Seguro que quieres eliminar el aula ${id_aula}?`)) {
            return;
        }

        try {
            const response = await fetch('/api/delete-aula', {
                method: 'DELETE',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id_aula }),
            });

            const data = await response.json();
            if (response.ok) {
                alert('Aula eliminada correctamente');
                location.reload(); // ðŸ”„ Recargar la pÃ¡gina para reflejar los cambios
            } else {
                alert(`Error: ${data.message}`);
            }
        } catch (error) {
            console.error('Error eliminando el aula:', error);
            alert('Hubo un problema al eliminar el aula.');
        }
    }
</script>

<style>
    .card-container {
        display: flex;
        align-items: center;
        padding: 12px;
        background-color: white;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        font-size: 14px;
        width: 100%;
        min-height: 60px;
        box-sizing: border-box;
    }

    /* Icono alineado a la izquierda */
    .icon-container {
        flex: 0 0 40px; /* TamaÃ±o fijo para el icono */
        display: flex;
        justify-content: center;
        align-items: center;
        margin-right: 10px;
    }

    /* Contenedor de contenido (ahora ocupa todo el espacio disponible) */
    .content-container {
        display: flex;
        flex-direction: column;
        flex-grow: 1; /* Expande todo el espacio disponible */
        justify-content: space-between;
    }

    /* Fila 1: ID a la izquierda, Grupo a la derecha */
    .info-row {
        display: flex;
        justify-content: space-between;
        width: 100%;
        margin-bottom: 20px;
    }

    .grupo {
        font-weight: bold;
    }

    /* Fila 2: Botones alineados a la derecha */
    .buttons-row {
        display: flex;
        justify-content: flex-end;
        gap: 8px;
    }

    /* Enlaces estilizados como botones */
    .icon-button {
        background-color: #007bff;
        color: white;
        border: none;
        padding: 4px;
        border-radius: 50%;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background 0.2s ease, transform 0.2s;
        width: 24px;
        height: 24px;
        text-decoration: none; /* Elimina el subrayado de los enlaces */
    }

    .icon-button:hover {
        background-color: #0056b3;
        transform: scale(1.1);
    }

    .delete {
        background-color: #dc3545;
    }

    .delete:hover {
        background-color: #a71d2a;
    }

    .icon-button svg {
        width: 16px; /* Asegura que todos los Ã­conos tengan el mismo ancho */
        height: 16px; /* Asegura que todos los Ã­conos tengan el mismo alto */
    }
</style>