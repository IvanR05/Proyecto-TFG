---
import Layout from "../layouts/Layout.astro"
import AppLayout from "../layouts/AppLayout.astro"
---

<AppLayout page_title="Registrar usuario">
  <form id="userForm">
    <h1>Crear Nuevo Usuario</h1>
    <label for="nombre">Nombre:</label>
    <input type="text" id="nombre" name="nombre" required />

    <label for="email">Correo:</label>
    <input type="email" id="email" name="email" required />

    <label for="password">Contraseña:</label>
    <div style="display: flex; flex-direction: column;">
      <input type="password" id="password" name="password" required />
      <button type="button" id="generatePasswordBtn">Generar Contraseña Aleatoria</button>
      <button type="button" id="togglePasswordBtn">Ver Contraseña</button>
    </div>

    <label for="tipo">Tipo de Usuario:</label>
    <select id="tipo" name="tipo" required>
      <option value="profesor">Profesor</option>
      <option value="admin">Administrador</option>
    </select>

    <button type="submit">Crear Usuario</button>
  </form>
</AppLayout>

<script>
  // Función para generar una contraseña aleatoria
  function generateRandomPassword(length = 12) {
    const charset = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()";
    let password = "";
    for (let i = 0; i < length; i++) {
      const randomIndex = Math.floor(Math.random() * charset.length);
      password += charset[randomIndex];
    }
    return password;
  }

  // Función para manejar el envío del formulario
  async function handleSubmit(event) {
    event.preventDefault();
    const formData = new FormData(event.target);

    const response = await fetch("/api/auth/registerAdmin", {
      method: "POST",
      body: formData,
    });

    const message = await response.text();
    alert(message);
  }

  // Asignar el evento para generar la contraseña aleatoria
  const passwordInput = document.getElementById("password") as HTMLInputElement;
  const generatePasswordBtn = document.getElementById("generatePasswordBtn");
  const togglePasswordBtn = document.getElementById("togglePasswordBtn");

  if (generatePasswordBtn) {
    generatePasswordBtn.addEventListener("click", () => {
      const randomPassword = generateRandomPassword();
      passwordInput.value = randomPassword;
    });
  } else {
    console.error("El botón para generar la contraseña no se encontró.");
  }

  // Asignar el evento para mostrar/ocultar la contraseña
  if (togglePasswordBtn) {
    togglePasswordBtn.addEventListener("click", () => {
      // Alternar entre tipo 'password' y 'text'
      const currentType = passwordInput.type;
      passwordInput.type = currentType === "password" ? "text" : "password";
    });
  } else {
    console.error("El botón para alternar la visibilidad de la contraseña no se encontró.");
  }

  // Asignar el evento de submit al formulario
  const form = document.getElementById("userForm");

  if (form) {
    form.addEventListener("submit", handleSubmit);
  } else {
    console.error("Formulario no encontrado.");
  }
</script>

<style>

  form {
    width: 100%;
    max-width: 450px;
  }

  h1 {
    text-align: center;
    color: #333;
    font-size: 24px;
    margin-bottom: 20px;
  }

  label {
    display: block;
    margin-top: 15px;
    font-weight: 600;
    color: #333;
  }

  input,
  select {
    width: 100%;
    padding: 12px;
    margin-top: 8px;
    border: 1px solid #ccc;
    border-radius: 8px;
    font-size: 16px;
    box-sizing: border-box;
    transition: all 0.3s ease-in-out;
  }

  input:focus,
  select:focus {
    border-color: #28a745;
    outline: none;
  }

  button {
    width: 100%;
    padding: 14px;
    margin-top: 20px;
    background-color: #28a745;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 18px;
    cursor: pointer;
    transition: background-color 0.3s ease-in-out;
  }

  button:hover {
    background-color: #218838;
  }

  #generatePasswordBtn,
  #togglePasswordBtn {
    background-color: #007bff;
    margin-top: 10px;
  }

  #generatePasswordBtn:hover,
  #togglePasswordBtn:hover {
    background-color: #0056b3;
  }

</style>


