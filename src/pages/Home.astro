---
import { supabase } from "../lib/supabase.js";
import AppLayout from "../layouts/AppLayout.astro";
import HorarioClases from "../components/HorarioClases.astro";
import FreeGuardiasDisplayer from "../components/FreeGuardiasDisplayer.astro";
import GuardiasToggle from "../components/GuardiasToggle.astro";
import OwnedGuardiasDisplayer from "../components/OwnedGuardiasDisplayer.astro";
import turnos from "../assets/turnos.json";

let turno;

// Get current session
const {
  data: { session },
} = await supabase.auth.getSession();
if (!session) throw new Error("User is not logged in");

// Fetch the user record from 'usuarios' using .single()
const { data: user, error: userError } = await supabase
  .from("usuarios")
  .select("*")
  .eq("auth_id", session.user.id)
  .single();
if (userError) throw userError;

const { data: turnoData, error: turnoError } = await supabase
  .from("horarios_profesor")
  .select("turno, inicio")
  .eq("id_profesor", user.id);

if (turnoError) throw turnoError;

turno = turnoData[0].turno;

const turnoActual = turnos[turno];

// Fetch aulas data from Supabase
const { data: aulasData, error: aulasError } = await supabase
  .from("aulas")
  .select("*");
---

<AppLayout page_title="Home">
  <h1>Bienvenido <span id="userName">{user.nombre}</span></h1>
  <p>Este es el horario para el día de hoy:</p>
  <HorarioClases />

  <GuardiasToggle>
    <div slot="mis-guardias">
      <OwnedGuardiasDisplayer />
    </div>

    <div slot="guardias-disponibles">
      <FreeGuardiasDisplayer />
    </div>
  </GuardiasToggle>
  <br /><br /><br /><br /><br /><br />
  <!--Deja espacio para la NavBar -->

  <div id="edit-modal" class="modal">
    <div class="modal-content">
      <div class="normal-section">
        <h3>Editar Guardia</h3>
        <form id="edit-guardia-form">
          <input type="hidden" id="edit-guardia-id" />

          <!-- Nuevo campo para la fecha -->
          <label>Fecha:</label>
          <input type="date" id="edit-fecha" required />

          <!-- Selector de tramo horario -->
          <label>Tramo Horario:</label>
          <select id="edit-tramo" required>
            <option value="">Selecciona un tramo</option>
            <optgroup label="Tramos disponibles">
              {
                turnoActual.map((tramo, index) => (
                  <option value={JSON.stringify(tramo)}>
                    {tramo.start} - {tramo.end}
                  </option>
                ))
              }
            </optgroup>
          </select>

          <!-- Campos restantes -->
          <label>Tipo:</label>
          <select id="edit-tipo" required>
            <option value="Recreo">Recreo</option> <!-- (20/03 3:35) He cambiado la primera en mayuscula, espero que no rompa nada -->
            <option value="Clase">Clase</option>
          </select>

          <label>Aula:</label>
          <select id="edit-aula" required>
            <option value="">Selecciona un aula</option>
            <optgroup label="Aulas disponibles">
              {
                aulasData?.map((aula, index) => (
                  <option value={JSON.stringify(aula)}>{aula.id_aula}</option>
                ))
              }
            </optgroup>
          </select>

          <label>Observaciones:</label>
          <textarea id="edit-observaciones"></textarea>

          <div class="modal-buttons">
            <button type="submit" class="confirm-button">Guardar Cambios</button
            >
            <button type="button" id="close-edit-modal" class="close-modal"
              >Cancelar</button
            >
          </div>
        </form>
      </div>
    </div>
  </div>
</AppLayout>

<script is:inline>
  /* Info modal */


  /* Edit modal */
  document.addEventListener("open-edit-modal", (e) => {
    e.stopPropagation();
    
    const guardia = e.detail;
    const modal = document.getElementById("edit-modal");

    // Convertir fecha existente a formato YYYY-MM-DD
    const fecha = new Date(guardia.inicio).toISOString().split("T")[0];
    document.getElementById("edit-fecha").value = fecha;
    document.getElementById("edit-guardia-id").value = guardia.id;

    // Buscar el tramo correspondiente
    const startTime = new Date(guardia.inicio).toTimeString().slice(0, 5);
    const endTime = new Date(guardia.fin).toTimeString().slice(0, 5);

    // Seleccionar tramo horario
    const tramoOptions = document.getElementById("edit-tramo").options;
    for (let i = 0; i < tramoOptions.length; i++) {
      const tramo = JSON.parse(tramoOptions[i].value || "{}");
      if (tramo.start === startTime && tramo.end === endTime) {
        tramoOptions.selectedIndex = i;
        break;
      }
    }

    // Seleccionar aula correcta
    const aulaSelect = document.getElementById("edit-aula");
    for (let i = 0; i < aulaSelect.options.length; i++) {
      if (aulaSelect.options[i].value) {
        try {
          const aula = JSON.parse(aulaSelect.options[i].value);
          if (aula.id_aula === guardia.id_aula) {
            aulaSelect.selectedIndex = i;
            break;
          }
        } catch (error) {
          console.error("Error parsing aula:", error);
        }
      }
    }

    // Resto de campos
    document.getElementById("edit-tipo").value = guardia.tipo;
    document.getElementById("edit-observaciones").value = guardia.observaciones;

    modal.classList.add("show");
  });

  // Submit handler actualizado
  document.getElementById("edit-guardia-form").addEventListener("submit", async (e) => {
    e.preventDefault();
    
    try {
      // Validar campos
      const fecha = document.getElementById("edit-fecha").value;
      const tramo = JSON.parse(document.getElementById("edit-tramo").value);
      const aulaSelect = document.getElementById("edit-aula");
      
      if (!fecha || !tramo || !aulaSelect.value) {
        alert("Por favor completa todos los campos requeridos");
        return;
      }

      // Parsear aula
      const selectedAula = JSON.parse(aulaSelect.value);
      
      const updatedGuardia = {
        id: document.getElementById("edit-guardia-id").value,
        inicio: new Date(`${fecha}T${tramo.start}`).toISOString(),
        fin: new Date(`${fecha}T${tramo.end}`).toISOString(),
        tipo: document.getElementById("edit-tipo").value,
        id_aula: selectedAula.id_aula,
        observaciones: document.getElementById("edit-observaciones").value,
      };

      const response = await fetch("/api/update-guardia", {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(updatedGuardia),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || `Error: ${response.status}`);
      }
      
      closeEditModal();
      location.reload();

    } catch (error) {
      console.error("Error actualizando guardia:", error);
      alert(error.message || "Error al actualizar la guardia");
    }
  });

  function closeEditModal() {
    const modal = document.getElementById("edit-modal");
    modal.classList.remove("show");
    document.body.classList.remove("modal-open");
  }

  document.getElementById("close-edit-modal").addEventListener("click", async function(e) {
    e.stopPropagation();
    closeEditModal();
  })
</script>

<style>
  body {
    background-color: rgb(226, 251, 255);
  }

  /* Estilos para el modal de edición */
  #edit-modal .modal-content {
    background-color: white;
    padding: 2rem;
    border-radius: 8px;
    width: 90%;
    max-width: 500px;
    position: relative;
    /* Centrado vertical y horizontal */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  }

  .normal-section {
    padding: 10px;
  }

  #edit-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
  }

  #edit-modal.show {
    display: block; /* Cambiado de flex a block para el transform */
  }

  #edit-guardia-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  #edit-guardia-form label {
    font-weight: bold;
  }

  #edit-guardia-form input,
  #edit-guardia-form select,
  #edit-guardia-form textarea {
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    width: 100%;
  }

  /* Añade estos estilos */
  #edit-tramo {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-bottom: 1rem;
  }

  #edit-fecha {
    width: 100%;
    padding: 0.5rem;
    border: 1px solid #ddd;
    border-radius: 4px;
    margin-bottom: 1rem;
  }
</style>
