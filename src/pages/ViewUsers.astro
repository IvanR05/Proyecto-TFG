---
import AppLayout from "../layouts/AppLayout.astro";
import { supabase } from "../lib/supabase.js";

//Consulta a supabase que devuelve usuarios
const { data: usuarios, error } = await supabase
  .from("usuarios")
  .select("id, nombre, correo, tipo, aceptado, created_at")
  .order("created_at", { ascending: true });
---

<AppLayout page_title="Gestión de Usuarios">
  <main class="content-wrapper">
    <h1 class="page-title"><svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-landmark"><line x1="3" x2="21" y1="22" y2="22"/><line x1="6" x2="6" y1="18" y2="11"/><line x1="10" x2="10" y1="18" y2="11"/><line x1="14" x2="14" y1="18" y2="11"/><line x1="18" x2="18" y1="18" y2="11"/><polygon points="12 2 20 7 4 7"/></svg> Gestión de Usuarios</h1>

    <!-- Controles de filtrado -->
    <div class="controls">
      <div class="filters">
        <button class="filter-btn active" data-filter="all"><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-globe"><circle cx="12" cy="12" r="10"/><path d="M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"/><path d="M2 12h20"/></svg> Todos</button>
        <button class="filter-btn" data-filter="active"><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-check"><circle cx="12" cy="12" r="10"/><path d="m9 12 2 2 4-4"/></svg> Activos</button>
        <button class="filter-btn" data-filter="inactive"><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-ban"><circle cx="12" cy="12" r="10"/><path d="m4.9 4.9 14.2 14.2"/></svg> Inactivos</button>
      </div>

      <div class="search-box">
        <input
          type="text"
          id="search-input"
          placeholder="🔍 Buscar por nombre..."
          class="search-input"
        />
      </div>
    </div>

    <!-- Tabla de usuarios -->
    {
      error ? (
        <div class="error-message">
          ⚠️ Error al cargar usuarios: {error.message}
        </div>
      ) : (
        <div class="table-wrapper">
          <div class="table-container">
            <table class="users-table">
              <thead>
                <tr>
                  <th><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-user-round"><circle cx="12" cy="8" r="5"/><path d="M20 21a8 8 0 0 0-16 0"/></svg> Nombre</th>
                  <th><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-mail"><rect width="20" height="16" x="2" y="4" rx="2"/><path d="m22 7-8.97 5.7a1.94 1.94 0 0 1-2.06 0L2 7"/></svg> Correo</th>
                  <th><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-graduation-cap"><path d="M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z"/><path d="M22 10v6"/><path d="M6 12.5V16a6 3 0 0 0 12 0v-3.5"/></svg> Tipo</th>
                  <th><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-chart-column"><path d="M3 3v16a2 2 0 0 0 2 2h16"/><path d="M18 17V9"/><path d="M13 17V5"/><path d="M8 17v-3"/></svg> Estado</th>
                  <th><svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-square-pen"><path d="M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/><path d="M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z"/></svg> Editar</th>
                </tr>
              </thead>
              <tbody id="users-list">
                {usuarios.map((usuario) => (
                  <tr
                    class="user-row"
                    data-status={usuario.aceptado ? "active" : "inactive"}
                    data-name={(usuario.nombre || "").toLowerCase()}
                    data-id={usuario.id}
                  >
                    <td>{usuario.nombre || "Sin nombre"}</td>
                    <td>{usuario.correo}</td>
                    <td class="user-type">{usuario.tipo || "N/A"}</td>
                    <td>
                      <span
                        class={`status-pill ${usuario.aceptado ? "active" : "inactive"}`}
                      >
                        {usuario.aceptado ? "Activo" : "Inactivo"}
                      </span>
                    </td>
                    <td class="actions">
                      <button
                        class="edit-btn"
                        data-id={usuario.id}
                        onclick={`window.location.href = '../updateUser/${usuario.id}'`}
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-square-pen"><path d="M12 3H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/><path d="M18.375 2.625a1 1 0 0 1 3 3l-9.013 9.014a2 2 0 0 1-.853.505l-2.873.84a.5.5 0 0 1-.62-.62l.84-2.873a2 2 0 0 1 .506-.852z"/></svg> Editar
                      </button>
                    </td>
                  </tr>
                ))}
                <tr class="no-results">
                  <td colspan="5">😞 No se encontraron usuarios</td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
      )
    }
  </main>

  <script is:inline>
    // Espera a que el contenido del DOM esté completamente cargado antes de ejecutar el código
    document.addEventListener("DOMContentLoaded", () => {
      // Selecciona todos los botones de filtro
      const filterButtons = document.querySelectorAll(".filter-btn");
      // Selecciona el input de búsqueda
      const searchInput = document.getElementById("search-input");
      // Selecciona todas las filas de usuarios
      const userRows = document.querySelectorAll(".user-row");
      // Selecciona la fila que muestra cuando no se encuentran resultados
      const noResultsRow = document.querySelector(".no-results");
  
      // Función para filtrar los usuarios según el filtro activo y el valor de búsqueda
      function filterUsers() {
        // Convierte el valor de búsqueda a minúsculas para una comparación insensible al caso
        const searchValue = searchInput.value.toLowerCase();
        // Obtiene el filtro activo
        const activeFilter = document.querySelector(".filter-btn.active").dataset.filter;
        // Variable para verificar si hay resultados
        let hasResults = false;
  
        // Itera sobre cada fila de usuario
        userRows.forEach((row) => {
          // Obtiene el nombre y el estado de la fila de usuario
          const name = row.dataset.name;
          const status = row.dataset.status;
          
          // Verifica si la fila coincide con el filtro activo y el valor de búsqueda
          const matchesFilter = activeFilter === "all" || status === activeFilter;
          const matchesSearch = name.includes(searchValue);
  
          // Si la fila cumple con los criterios, la muestra; si no, la oculta
          if (matchesFilter && matchesSearch) {
            row.style.display = "";
            hasResults = true;
          } else {
            row.style.display = "none";
          }
        });
  
        // Muestra u oculta la fila de "sin resultados" dependiendo si se encontraron resultados
        noResultsRow.style.display = hasResults ? "none" : "table-row";
      }
  
      // Añade un evento de clic a cada botón de filtro
      filterButtons.forEach((button) => {
        button.addEventListener("click", (e) => {
          // Elimina la clase "active" de todos los botones
          filterButtons.forEach((btn) => btn.classList.remove("active"));
          // Añade la clase "active" al botón clickeado
          e.target.classList.add("active");
          // Llama a la función de filtrado
          filterUsers();
        });
      });
  
      // Añade un evento para filtrar cuando el usuario escriba en el campo de búsqueda
      searchInput.addEventListener("input", filterUsers);
    });
  </script>
  

  <style>
    /* Contenedor principal */
    .content-wrapper {
      width: 100%;
      max-width: 1000px;
      padding: 2rem;
      margin: auto;
      background: #fff;
      box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
      border-radius: 8px;
      text-align: center;
    }

    /* Controles de filtro y búsqueda */
    .controls {
      display: flex;
      flex-direction: column;
      gap: 1rem;
      margin-bottom: 1.5rem;
      align-items: center;
    }

    .filters {
      display: flex;
      gap: 0.8rem;
      flex-wrap: wrap; /* Permite que los botones se acomoden en varias filas si es necesario */
      justify-content: center;
    }

    .filter-btn {
      background: #e2e2e2;
      border: none;
      padding: 0.6rem 1.2rem;
      border-radius: 4px;
      font-size: 1rem;
      cursor: pointer;
      transition: background 0.3s;
    }

    .filter-btn:hover {
      background: #d1d1d1;
    }

    .filter-btn.active {
      background: #3498DB;
      color: #fff;
    }

    .search-box {
      display: flex;
      justify-content: center;
      width: 100%;
      max-width: 300px;
    }

    .search-input {
      width: 100%;
      padding: 0.6rem 1rem;
      border: 1px solid #ccc;
      border-radius: 4px;
      font-size: 1rem;
      transition: border-color 0.3s;
    }

    .search-input:focus {
      border-color: #3498DB;
    }

    /* Tabla de usuarios */
    .table-wrapper {
      width: 100%;
      overflow-x: auto;
      margin-top: 1rem;
    }

    .table-container {
      min-width: 800px;
      max-width: 100%;
    }

    .users-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 1rem;
      border-radius: 8px;
      overflow: hidden;
    }

    .users-table th,
    .users-table td {
      padding: 1rem;
      text-align: left;
      font-size: 1rem;
      border-bottom: 1px solid #f1f1f1;
    }

    .users-table th {
      background-color: #f8f8f8;
    }

    .users-table td {
      background-color: #fff;
    }

    .users-table tr:hover td {
      background-color: #f7f7f7;
    }

    .status-pill {
      padding: 0.3rem 0.6rem;
      border-radius: 20px;
      font-weight: bold;
    }

    .status-pill.active {
      background-color: #3498DB;
      color: #fff;
    }

    .status-pill.inactive {
      background-color: #f44336;
      color: #fff;
    }

    /* Fila sin resultados */
    .no-results {
      display: none;
      text-align: center;
      padding: 1rem;
      color: #888;
    }

    /* Botón de editar */
    .edit-btn {
      background: #3498DB;
      color: white;
      border: none;
      padding: 0.4rem 0.8rem;
      border-radius: 4px;
      cursor: pointer;
      transition: background 0.3s;
    }

    .edit-btn:hover {
      background: #3498DB;
    }

    /* Respuesta a pantallas pequeñas */
    @media (max-width: 768px) {
      .content-wrapper {
        padding: 1.5rem;
      }

      .filters {
        flex-direction: column; /* Los filtros se apilan verticalmente en pantallas pequeñas */
        gap: 1rem;
      }

      .search-box {
        width: 100%;
        max-width: 100%; /* Ocupa todo el ancho disponible */
        padding: 0.5rem;
      }

      .search-input {
        width: 100%;
        font-size: 1rem;
      }

      .users-table th,
      .users-table td {
        padding: 0.8rem;
        font-size: 0.9rem;
      }

      .table-wrapper {
        overflow-x: scroll;
        max-height: 300px;
      }

      .users-table {
        font-size: 0.9rem; /* Reducir el tamaño de la fuente en pantallas pequeñas */
      }
    }
  </style>
</AppLayout>
